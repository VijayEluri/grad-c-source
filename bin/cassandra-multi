#!/bin/sh
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# OPTIONS:
#   -f: start in foreground
#   -p <filename>: log the pid to a file (useful to kill it later)

# CONTROLLING STARTUP:
# 
# This script relies on few environment variables to determine startup
# behavior, those variables are:
#
#   CLASSPATH -- A Java classpath containing everything necessary to run.
#   JVM_OPTS -- Additional arguments to the JVM for heap size, etc
#   CASSANDRA_CONF -- Directory containing Cassandra configuration files.
#
# As a convenience, a fragment of shell is sourced in order to set one or
# more of these variables. This so-called `include' can be placed in a 
# number of locations and will be searched for in order. The lowest 
# priority search path is the same directory as the startup script, and
# since this is the location of the sample in the project tree, it should
# almost work Out Of The Box.
#
# Any serious use-case though will likely require customization of the
# include. For production installations, it is recommended that you copy
# the sample to one of /usr/share/cassandra/cassandra.in.sh,
# /usr/local/share/cassandra/cassandra.in.sh, or 
# /opt/cassandra/cassandra.in.sh and make your modifications there.
#
# Another option is to specify the full path to the include file in the
# environment. For example:
#
#   $ CASSANDRA_INCLUDE=/path/to/in.sh cassandra -p /var/run/cass.pid
#
# Note: This is particularly handy for running multiple instances on a 
# single installation, or for quick tests.
#
# Finally, developers and enthusiasts who frequently run from an SVN 
# checkout, and do not want to locally modify bin/cassandra.in.sh, can put
# a customized include file at ~/.cassandra.in.sh.
#
# If you would rather configure startup entirely from the environment, you
# can disable the include by exporting an empty CASSANDRA_INCLUDE, or by 
# ensuring that no include files exist in the aforementioned search list.
# Be aware that you will be entirely responsible for populating the needed
# environment variables.

# If an include wasn't specified in the environment, then search for one...
# [MODIFIED]we specify the $CASSANDRA_INCLUDE to cassandra-multi.in.sh in the same directory
CASSANDRA_INCLUDE=`dirname $0`/cassandra-multi.in.sh

if [ "x$CASSANDRA_INCLUDE" = "x" ]; then
    # Locations (in order) to use when searching for an include file.
    for include in /usr/share/cassandra/cassandra.in.sh \
                   /usr/local/share/cassandra/cassandra.in.sh \
                   /opt/cassandra/cassandra.in.sh \
                   ~/.cassandra.in.sh \
                   `dirname $0`/cassandra.in.sh; do
        if [ -r $include ]; then
            . $include
            break
        fi
    done
# ...otherwise, source the specified include.
elif [ -r $CASSANDRA_INCLUDE ]; then
    . $CASSANDRA_INCLUDE
fi

# Use JAVA_HOME if set, otherwise look for java in PATH
if [ -x $JAVA_HOME/bin/java ]; then
    JAVA=$JAVA_HOME/bin/java
else
    JAVA=`which java`
fi

if [ -z $CASSANDRA_CONF -o -z $CLASSPATH ]; then
    echo "You must set the CASSANDRA_CONF and CLASSPATH vars" >&2
    exit 1
fi

# Special-case path variables.
case "`uname`" in
    CYGWIN*) 
        CLASSPATH=`cygpath -p -w "$CLASSPATH"`
        CASSANDRA_CONF=`cygpath -p -w "$CASSANDRA_CONF"`
    ;;
esac

launch_service()
{
    pidpath=$1
    foreground=$2
    props=$3
    cassandra_parms="$cassandra_conf_parms -Dstorage-config=$CASSANDRA_CONF"
    
    if [ "x$pidpath" != "x" ]; then
        cassandra_parms="$cassandra_parms -Dcassandra-pidfile=$pidpath"
    fi
    
    # The cassandra-foreground option will tell CassandraDaemon not
    # to close stdout/stderr, but it's up to us not to background.
    if [ "x$foreground" != "x" ]; then
        cassandra_parms="$cassandra_parms -Dcassandra-foreground=yes"
        exec $JAVA $JVM_OPTS $cassandra_parms -cp $CLASSPATH $props \
                org.apache.cassandra.thrift.CassandraDaemon
    # Startup CassandraDaemon, background it, and write the pid.
    else
        exec $JAVA $JVM_OPTS $cassandra_parms -cp $CLASSPATH $props \
                    org.apache.cassandra.thrift.CassandraDaemon <&- &
        [ ! -z $pidpath ] && printf "%d " $! >> $pidpath
    fi

    return $?
}




# Parse any command line options.
args=`getopt fhp:bD:n: "$@"`
eval set -- "$args"

while true; do
    case "$1" in
        -p)
            pidfile="$2"
            shift 2
        ;;
        -f)
            foreground="yes"
            shift
        ;;
        -h)
            echo "Usage: $0 [-f] [-h] [-p pidfile] [-b]"
            exit 0
        ;;
        -D)
            properties="$properties -D$2"
            shift 2
        ;;
        --)
            shift
            break
        ;;
        -n)
            number="$2"
            shift 2
        ;;
        *)
            echo "Error parsing arguments!" >&2
            exit 1
        ;;
    esac
done

#echo "number is $number"


#+++++try to add java run-time varible section start+++++
#//we made each directory for each node here.

host_id=`hostname |sed 's/lime//g'`
CASSANDRA_NODE_home="/work2/okudera/cassandra-lite/data"
#set Seeds
. ./dynamic_seeds_conf
echo "[[[[["
echo ${#Storage_Seeds_Seed[*]} 
echo "]]]]]"
j=0
while expr $j \<  ${#Storage_Seeds_Seed[*]} 
do
echo $j
    cassandra_seed_conf_parms="$cassandra_seed_conf_parms -DStorage_Seeds_Seed${j}=${Storage_Seeds_Seed[$j]}"
    j=`expr $j + 1`
done
cassandra_seed_conf_parms="$cassandra_seed_conf_parms -DStorage_Seeds_Length=${#Storage_Seeds_Seed[*]}" 




#echo $cassandra_parms
#/home/okudera/work/cassandra-lite/measure-tool/getPacketInfo &

for i in `seq 1 $number`
do

	#//0.prepare. Assign address and tidy up the data folder 
	#sudo ifconfig lo0 alias 127.0.0.$i up
	#echo "excute sudo ifconfig lo0 alias 127.0.0.$i up"
	
	
	eval node_name="node$i"
	#0.intiate the date-file (delete all date int the past)
	if  test -e "${CASSANDRA_NODE_home}/${node_name}"  ; then
		echo "rm date-file node$i/*"
		rm -rf ${CASSANDRA_NODE_home}/${node_name}/* 
	else
		echo "make directory node$i"
		mkdir ${CASSANDRA_NODE_home}/${node_name}
	fi
	
	
	#1.change storga-conf pram
    base_subnet_address="10.20.${host_id}"
	cassandra_conf_parms=""
	cassandra_conf_parms="$cassandra_conf_parms -DStorage_StoragePort=7001"
	cassandra_conf_parms="$cassandra_conf_parms -DStorage_ListenAddress=${base_subnet_address}.$i"
	cassandra_conf_parms="$cassandra_conf_parms -DStorage_ThriftAddress=${base_subnet_address}.$i"
    thriftport=`expr 9060 + ${i}`
	cassandra_conf_parms="$cassandra_conf_parms -DStorage_ThriftPort=${thriftport}"
	cassandra_conf_parms="$cassandra_conf_parms -DStorage_DataFileDirectories_DataFileDirectory=${CASSANDRA_NODE_home}/${node_name}/data"
	cassandra_conf_parms="$cassandra_conf_parms -DStorage_CommitLogDirectory=${CASSANDRA_NODE_home}/${node_name}/commitlog"
	cassandra_conf_parms="$cassandra_conf_parms -DStorage_SavedCachesDirectory=${CASSANDRA_NODE_home}/${node_name}/saved_caches"
	cassandra_conf_parms="$cassandra_conf_parms $cassandra_seed_conf_parms"

    #echo $cassandra_conf_parms
	
	#2. chaemge log4j.file param
	#TODO:not yet done
	
	#3.change jvm parm
	jmxport=`expr 8080 + ${i}`
    JVM_OPTS="$JVM_OPTS_ORIGINAL -Dcom.sun.management.jmxremote.port=${jmxport}"
	#echo $JVM_OPTS
	
	#4. Start up the service
	launch_service "$pidfile" "$foreground" "$properties"
	
	if test `expr ${i} % 10` -eq 0 ;then 
	    sleep 30
    fi
done

#+++++try to add java run-time varible section end+++++




exit $?

# vi:ai sw=4 ts=4 tw=0 et
